/*!
 * @skatejs/val v0.4.0 - https://github.com/skatejs/val
 * MIT Licensed
 */
(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else {
		var a = factory();
		for(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];
	}
})(this, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// identity function for calling harmony imports with the correct context
/******/ 	__webpack_require__.i = function(value) { return value; };
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 1);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (immutable) */ __webpack_exports__["default"] = val;
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "h", function() { return h; });
function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

var _window = window,
    customElements = _window.customElements;

var cacheCtorLocalNames = new Map();
var cacheElementEventHandlers = new WeakMap();

// Override customElements.define() to cache constructor local names. This is
// required for all virtual DOM implementations that don't natively support
// custom element constructors as node names.
if (customElements) {
  var define = customElements.define;

  customElements.define = function (name, Ctor) {
    cacheCtorLocalNames.set(Ctor, name);
    return define.call(customElements, name, Ctor);
  };
}

// Applies attributes to the ref element. It doesn't traverse through
// existing attributes and assumes that the supplied object will supply
// all attributes that the applicator should care about, even ones that
// should be removed.
function applyAttrs(e, attrs) {
  if (!attrs) return;

  Object.keys(attrs).forEach(function (name) {
    var value = attrs[name];
    if (value == null) {
      e.removeAttribute(name);
    } else {
      e.setAttribute(name, value);
    }
  });
}

function applyEvents(e) {
  var events = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

  var handlers = cacheElementEventHandlers.get(e) || {};
  cacheElementEventHandlers.set(e, events);

  // Remove any old listeners that are different - or aren't specified
  // in - the new set.
  Object.keys(handlers).forEach(function (name) {
    if (handlers[name] && handlers[name] !== events[name]) {
      e.removeEventListener(name, handlers[name]);
    }
  });

  // Bind new listeners.
  Object.keys(events).forEach(function (name) {
    if (events[name] !== handlers[name]) {
      e.addEventListener(name, events[name]);
    }
  });
}

// Sets props. Straight up.
function applyProps(e, props) {
  Object.keys(props || {}).forEach(function (name) {
    e[name] = props[name];
  });
}

// Ensures that if a ref was specified that it's called as normal.
function applyRef(e, ref) {
  if (ref) {
    ref(e);
  }
}

// Ensures attrs, events and props are all set as the consumer intended.
function ensureAttrs(objs) {
  var _ref = objs || {},
      attrs = _ref.attrs,
      events = _ref.events,
      ref = _ref.ref,
      key = _ref.key,
      dangerouslySetInnerHTML = _ref.dangerouslySetInnerHTML,
      props = _objectWithoutProperties(_ref, ['attrs', 'events', 'ref', 'key', 'dangerouslySetInnerHTML']);

  var newRef = ensureRef({ attrs: attrs, events: events, props: props, ref: ref });
  return { ref: newRef, key: key, dangerouslySetInnerHTML: dangerouslySetInnerHTML };
}

// Ensures a ref is supplied that set each member appropriately and that
// the original ref is called.
function ensureRef(_ref2) {
  var attrs = _ref2.attrs,
      events = _ref2.events,
      props = _ref2.props,
      ref = _ref2.ref;

  return function (e) {
    if (e) {
      applyAttrs(e, attrs);
      applyEvents(e, events);
      applyProps(e, props);
    }
    applyRef(e, ref);
  };
}

// Returns the custom element local name if it exists or the original
// value.
function ensureLocalName(lname) {
  var temp = cacheCtorLocalNames.get(lname);
  return temp || lname;
}

// Default adapter for rendering DOM.
function defaultCreateElement(lname, _ref3) {
  var ref = _ref3.ref,
      attrs = _objectWithoutProperties(_ref3, ['ref']);

  var node = typeof lname === 'function' ? new lname() : document.createElement(lname);
  if (ref) ref(node);

  for (var _len = arguments.length, chren = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
    chren[_key - 2] = arguments[_key];
  }

  chren.forEach(function (c) {
    return node.appendChild(typeof c === 'string' ? document.createTextNode(c) : c);
  });
  return node;
}

// Provides a function that takes the original createElement that is being
// wrapped. It returns a function that you call like you normally would.
//
// It requires support for:
// - `ref`
function val() {
  var createElement = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultCreateElement;

  return function (lname, attrs) {
    lname = ensureLocalName(lname);
    attrs = ensureAttrs(attrs);

    for (var _len2 = arguments.length, chren = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
      chren[_key2 - 2] = arguments[_key2];
    }

    return createElement.apply(undefined, [lname, attrs].concat(chren));
  };
}

var h = val();

/***/ }),
/* 1 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(0);


/***/ })
/******/ ]);
});